- hosts: apic
  connection: local
  gather_facts: no

  vars:
    apic_info: &apic_info
      host:           "{{ ansible_host }}" 
      user:           "{{ ansible_user }}" 
      password:       "{{ ansible_password }}" 
      validate_certs: "{{ validate_certs }}"
      use_ssl:        "{{ use_ssl }}"
    
    var_state: &var_state
      state: "{{ state_all if state_all is defined else item.state if item.state is defined else 'present' }}"

  vars_files: access_policy_vars.yml

  tasks:
  # Fabric > Access Policies > Pools > VLAN
  - name: Task1 - VLAN pool
    cisco.aci.aci_vlan_pool:
      <<: *apic_info
      <<: *var_state
      pool:                 "{{ item.name }}"
      pool_allocation_mode: "{{ item.alloc_mode }}"
    loop: "{{ vlan_pools }}"
    tags: accp-task1, vlan_pool

  # Fabric > Access Policies > Pools > VLAN > (VLAN Pool) > Encap Blocks(+)
  - name: Task2 - VLAN encap block
    cisco.aci.aci_vlan_pool_encap_block:
      <<: *apic_info
      <<: *var_state
      pool:                 "{{ item.pool_name }}"
      pool_allocation_mode: "{{ item.alloc_mode }}"
      block_name:           ""
      block_start:          "{{ item.block_start }}"
      block_end:            "{{ item.block_end }}"
    loop: "{{ vlan_blocks }}"
    tags: accp-task2, vlan_pool, encap_block

  # Fabric > Access Policies > Physical and External Domains > Physical Domains
  - name: Task3a - Physical Domain
    cisco.aci.aci_domain:
      <<: *apic_info
      <<: *var_state
      domain:      "{{ item.name }}"
      domain_type: "{{ item.domain_type }}"
    loop: "{{ domains }}"
    when: item.domain_type == "phys"
    tags: accp-task3a, domain, domain_phys

  # Fabric > Access Policies > Physical and External Domains > Physical Domains
  - name: Task3b - VMM Domain
    cisco.aci.aci_domain:
      <<: *apic_info
      <<: *var_state
      domain:      "{{ item.name }}"
      domain_type: "{{ item.domain_type }}"
      vm_provider: "{{ item.vm_provider }}"
    loop: "{{ domains }}"
    when: item.domain_type == "vmm"
    tags: accp-task3b, domain, domain_vmm

  # Fabric > Access Policies > Policies > Interface > CDP Interface
  - name: Task4 - CDP Interface Policy
    cisco.aci.aci_interface_policy_cdp:
      <<: *apic_info
      <<: *var_state
      name:        "{{ item.name }}"
      admin_state: "{{ item.admin_state }}"
    loop: "{{ policy_cdp }}"
    tags: accp-task4, policy_group, policy_cdp

  # Fabric > Access Policies > Policies > Global > Attachable Access Entity Profiles
  - name: Task5 - AEP
    cisco.aci.aci_aep:
      <<: *apic_info
      <<: *var_state
      aep:        "{{ item.aep_name }}"
      infra_vlan: "{{ item.infra_vlan }}"
    loop: "{{ aeps }}"
    tags: accp-task5, aep

  # Fabric > Access Policies > Policies > Global > Attachable Access Entity Profiles > (AEP) > Domains(+)
  - name: Task6a - AEP to domain binding
    cisco.aci.aci_aep_to_domain:
      <<: *apic_info
      <<: *var_state
      aep:         "{{ item.aep_name }}"
      domain:      "{{ item.domain_name }}"
      domain_type: "{{ item.domain_type }}"
    loop: "{{ aeps }}"
    when: item.domain_type == "phys"
    tags: accp-task6a, aep, domain, domain_phys

  # Fabric > Access Policies > Policies > Global > Attachable Access Entity Profiles > (AEP) > Domains(+)
  - name: Task6b - AEP to domain binding
    cisco.aci.aci_aep_to_domain:
      <<: *apic_info
      <<: *var_state
      aep:         "{{ item.aep_name }}"
      domain:      "{{ item.domain_name }}"
      domain_type: "{{ item.domain_type }}"
      vm_provider: "{{ item.vm_provider }}"
    loop: "{{ aeps }}"
    when: item.domain_type == "vmm"
    tags: accp-task6b, aep, domain, domain_vmm

  # Fabric > Access Policies > Interfaces > Leaf Interfaces > Policy Groups > Leaf Access Port
  - name: Task7 - Leaf Access Port Policy Group
    cisco.aci.aci_interface_policy_leaf_policy_group:
      <<: *apic_info
      <<: *var_state
      policy_group: "{{ item.policy_group }}"
      aep:          "{{ item.aep }}"
      lag_type:     "{{ item.lag_type }}"
      cdp_policy:   "{{ item.cdp_policy }}"
    loop: "{{ interface_policy_groups }}"
    tags: accp-task7, policy_group, aep, policy_cdp

  # Fabric > Access Policies > Interfaces > Leaf Interfaces > Profiles
  - name: Task8 - Leaf interface profile
    cisco.aci.aci_interface_policy_leaf_profile:
      <<: *apic_info
      <<: *var_state
      interface_profile: "{{ item.name }}"
    loop: "{{ interface_profiles }}"
    tags: accp-task8, interface_profile

  # Fabric > Access Policies > Interfaces > Leaf Interfaces > Profiles > (profile) > Port Blocks
  - name: Task9 - Association port Selector to an Leaf Profile with a Policy Group
    cisco.aci.aci_access_port_to_interface_policy_leaf_profile:
      <<: *apic_info
      <<: *var_state
      interface_profile:    "{{ item.interface_profile }}"
      access_port_selector: "{{ item.selector_name }}"
      port_blk:             "{{ item.selector_name }}"
      from_port:            "{{ item.from_port }}"
      to_port:              "{{ item.to_port }}"
      from_card:            "{{ item.from_card }}"
      to_card:              "{{ item.to_card }}"
      policy_group:         "{{ item.policy_group }}"
    loop: "{{ interface_selectors }}"
    tags: accp-task9, interface_profile, policy_group

  # Fabric > Access Policies > Switches > Leaf Switches > Profiles
  - name: Task10 - Leaf Profile
    cisco.aci.aci_switch_policy_leaf_profile:
      <<: *apic_info
      <<: *var_state
      leaf_profile: "{{ item.name }}"
    loop: "{{ leaf_profiles }}"
    tags: accp-task10, leaf_profile

  # Fabric > Access Policies > Switches > Leaf Switches > Profiles > (profile) > Leaf Selectors
  - name: Task11 - Switch policy leaf profile selector associated Node Block range (w/ policy group)
    cisco.aci.aci_switch_leaf_selector:
      <<: *apic_info
      <<: *var_state
      leaf_profile:  "{{ item.leaf_profile }}"
      leaf:          "{{ item.selector_name }}"
      leaf_node_blk: "{{ item.selector_name }}"
      from:          "{{ item.from }}"
      to:            "{{ item.to }}"
    loop: "{{ leaf_selectors }}"
    tags: accp-task11, leaf_profile, leaf_selector

  # Fabric > Access Policies > Switches > Leaf Switches > Profiles > (profile) > Associated Interface Selector Profile
  - name: Task12 - Associating an interface selector profile to a switch policy leaf profile
    cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile:
      <<: *apic_info
      <<: *var_state
      leaf_profile:       "{{ item.leaf_profile }}"
      interface_selector: "{{ item.interface_profile }}"
    loop: "{{ leaf_selectors }}"
    tags: accp-task12, leaf_profile, interface_selector